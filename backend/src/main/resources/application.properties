quarkus.http.port=${PORT:8080}

# The solver runs only for 5 seconds to avoid a HTTP timeout in this simple implementation.
# It's recommended to run for at least 5 minutes ("5m") otherwise.

quarkus.timefold.solver.termination.spent-limit=60s

quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization

# datasource config
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ${QUARKUS_DATASOURCE_USERNAME}
quarkus.datasource.password = ${QUARKUS_DATASOURCE_PASSWORD}
quarkus.datasource.jdbc.url = ${QUARKUS_DATASOURCE_JDBC_URL}

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = create-drop

# transaction timeout
quarkus.transaction-manager.default-transaction-timeout=320s

# set batch size to optimise db transactions
quarkus.hibernate-orm.jdbc.batch_size=100

# Agoral pooling config
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.min-size=5
quarkus.datasource.jdbc.initial-size=10
quarkus.datasource.jdbc.idle-removal-interval=5M
quarkus.datasource.jdbc.max-lifetime=30M


# -------------------------------------------
# Debuggers
# -------------------------------------------

# debugger for large/complex db transactions
quarkus.log.category."com.arjuna".level=DEBUG

# TimeFold solver debuggers
quarkus.log.category."ai.tim.sol.cor.imp.sol".level=DEBUG
quarkus.log.category."ai.tim.sol.cor.imp.con".level=DEBUG

# -------------------------------------------
# Loggers
# -------------------------------------------

# log datasource metrics
quarkus.datasource.metrics.enabled=true
quarkus.datasource.jdbc.enable-metrics=true

# log datasource leak
quarkus.datasource.jdbc.log-leak-detection=true

# log transactions
quarkus.log.category."org.hibernate.engine.transaction.internal.TransactionImpl".level=DEBUG
quarkus.log.category."org.hibernate.engine.transaction.spi.AbstractTransactionImpl".level=DEBUG
quarkus.log.category."org.hibernate.resource.jdbc.internal.LogicalConnectionImpl".level=DEBUG
quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.jboss.logging".level=DEBUG
quarkus.hibernate-orm.statistics=true
quarkus.hibernate-orm.log-session-metrics=true
quarkus.hibernate-orm.metrics.enabled=true

# log sql commands
# quarkus.hibernate-orm.log.sql=true
# quarkus.hibernate-orm.format-sql=true

# enable logfile
quarkus.log.file.enable=true
quarkus.log.file.path=logs/quarkus.log
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=10

# log in details for frontend
frontend.username=${FRONTEND_USERNAME}
frontend.password=${FRONTEND_PASSWORD}
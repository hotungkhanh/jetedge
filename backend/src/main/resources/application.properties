quarkus.http.port=${PORT:8080}

# The solver runs only for 5 seconds to avoid a HTTP timeout in this simple implementation.
# It's recommended to run for at least 5 minutes ("5m") otherwise.
quarkus.timefold.solver.termination.spent-limit=6s
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization

# datasource config
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ${QUARKUS_DATASOURCE_USERNAME}
quarkus.datasource.password = ${QUARKUS_DATASOURCE_PASSWORD}
quarkus.datasource.jdbc.url = ${QUARKUS_DATASOURCE_JDBC_URL}

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = create-drop

# datasource metrics
quarkus.datasource.metrics.enabled=true
quarkus.datasource.jdbc.enable-metrics=true

# datasource log leak
quarkus.datasource.jdbc.log-leak-detection=true

# transaction timeout
quarkus.transaction-manager.default-transaction-timeout=320s

# debugger for large/complex db transactions
quarkus.log.category."com.arjuna".level=DEBUG